;;; -*- mode: lisp -*-

(in-package :stumpwm)

(set-prefix-key (kbd "C-i"))
(define-key *root-map* (kbd "c") "exec kitty")

(define-key *top-map* (kbd "F12")  "exec maim ~/$(date +%s).png")
(define-key *top-map* (kbd "F11")  "exec maim -s ~/$(date +%s).png")
(define-key *top-map* (kbd "F10")  "exec amixer set Master 2%+")
(define-key *top-map* (kbd "F9")  "exec amixer set Master 2%-")

(defcommand chromium () ()
  "run or raise chromium with proxy"
  (run-or-raise "chromium --proxy-server=socks5://localhost:1080" '(:class "Chromium")))

(define-key *root-map* (kbd "b") "chromium")

(defcommand telegram () ()
  "run or raise telegram"
  (run-or-raise "telegram-desktop" '(:class "TelegramDesktop")))

(define-key *root-map* (kbd "t") "telegram")

(setf *mouse-focus-policy* :click)

(setf *colors*
  '("#181E24"
    "#D95468"
    "#8BD49C"
    "#EBBF83"
    "#5EC4FF"
    "#E27E8D"
    "#70E1E8"
    "#A0B3C5"))

(defun my/update-color-map (screen)
  "remove "
  (labels ((map-colors (amt)
             (loop for c in *colors*
                   as color = (lookup-color screen c)
                   do (adjust-color color amt)
                   collect (alloc-color screen color))))
    (setf (screen-color-map-normal screen) (apply #'vector (map-colors 0))
          (screen-color-map-bright screen) (apply #'vector (map-colors 0)))))

(my/update-color-map (current-screen))

(setf *mode-line-background-color* "#1D252C")
(setf *mode-line-foreground-color* "#5EC4FF")
(mode-line)

(ql:quickload "clx-truetype")
(load-module "ttf-fonts")
(set-font (make-instance 'xft:font :family "WenQuanYi Zen Hei Mono" :subfamily "Regular" :size 11))
